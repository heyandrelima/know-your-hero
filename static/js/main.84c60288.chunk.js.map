{"version":3,"sources":["redux/reducers/characters.js","redux/actionTypes.js","redux/reducers/stats.js","redux/reducers/index.js","redux/store.js","components/searchResult/SearchResult.js","components/search/Search.js","components/circularstat/CircularStat.js","components/character/Character.js","components/charactersContainer/CharactersContainer.js","components/chart/Chart.js","components/statsContainer/StatsContainer.js","App.js","index.js"],"names":["initialState","characters","state","arguments","length","undefined","action","type","character","payload","concat","Object","toConsumableArray","index","forEach","char","ind","id","splice","stats","newStat","newStats","name","push","data","key","currentStats","stat","iteration","allKeys","keys","currentKey","filter","combineReducers","createStore","rootReducer","SearchResult","props","result","delay","react_default","a","createElement","onClick","className","style","animationDelay","src","image","url","alt","biography","publisher","controller","AbortController","signal","styles","input","width","fontSize","padding","border","resultsHolder","position","maxHeight","overflowY","backgroundColor","zIndex","Search","_useState","useState","_useState2","slicedToArray","query","setQuery","_useState3","_useState4","currentQuery","setCurrentQuery","_useState5","_useState6","searchResults","setSearchResults","dispatch","useDispatch","updateQuery","event","abort","value","target","callSearch","urlToFetch","process","options","method","mode","setTimeout","fetch","then","response","json","results","catch","error","console","log","autoComplete","placeholder","onChange","onKeyUp","map","searchResult_SearchResult","CircularStat","title","min","max","color","duration","radius","Math","innerRadius","active","setActive","useEffect","svgCanvas","d3","select","html","attr","gBackground","append","canvasWidth","canvasHeight","gData","pie","datapoint","dataReady","item","arc","outerRadius","cornerRadius","backgroundData","selectAll","enter","transition","attrTween","newData","objectSpread","interpolateEndAngle","startAngle","endAngle","progress","text","groups","getBBox","height","tween","element","interpolateText","newText","parseInt","drawStat","cursor","full-name","addStat","textAlign","textTransform","AccordionContent","posed","div","closed","open","Character","units","setOpen","circularStats","powerstats","openAccordion","pose","appearance","race","gender","weight","connections","relatives","work","occupation","aliases","alias","i","floor","random","getRandomColor","circularstat_CircularStat","CharactersContainer","useSelector","overflowX","character_Character","Chart","drawBarChart","allValues","parseFloat","canvas","newNumber","textContent","format","marginBottom","marginTop","StatsContainer","store","useStore","statsState","setStatsState","subscribe","statsArray","display","alignItems","chart_Chart","App","search_Search","charactersContainer_CharactersContainer","statsContainer_StatsContainer","ReactDOM","render","es","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.84c60288.chunk.js","sourcesContent":["import { ADD_CHARACTER, REMOVE_CHARACTER } from '../actionTypes';\r\n\r\nconst initialState = {\r\n    characters: []\r\n};\r\n\r\nconst characters = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_CHARACTER: {\r\n            const character = action.payload;\r\n\r\n            return {\r\n                characters: [...state.characters, character]\r\n            };\r\n        }\r\n        case REMOVE_CHARACTER: {\r\n            const { characters } = state;\r\n            const character = action.payload;\r\n            let index;\r\n\r\n            state.characters.forEach((char, ind) => {\r\n                if(char.id === character.id) index = ind;\r\n            });\r\n\r\n            characters.splice(index, 1)\r\n\r\n            return {\r\n                characters: [...characters]\r\n            };\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default characters;","export const ADD_CHARACTER = \"ADD_CHARACTER\";\r\nexport const REMOVE_CHARACTER = \"REMOVE_CHARACTER\";\r\nexport const ADD_STAT = \"ADD_STAT\";\r\nexport const REMOVE_STAT = \"REMOVE_STAT\";\r\nexport const REMOVE_CHAR_STATS = \"REMOVE_CHAR_STATS\";","import { ADD_STAT, REMOVE_STAT, REMOVE_CHAR_STATS } from '../actionTypes';\r\n\r\nconst initialState = {\r\n    stats: []\r\n};\r\n\r\nconst stats = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_STAT: {\r\n            const newStat = action.payload;\r\n            let newStats = state.stats;\r\n\r\n            newStats[newStat.name] ? newStats[newStat.name].push(newStat.data)\r\n                : newStats[newStat.name] = [newStat.data];\r\n\r\n            return {\r\n                stats: newStats\r\n            };\r\n        }\r\n        case REMOVE_STAT: {\r\n            const key = action.payload.key;\r\n            const id = action.payload.id;\r\n            const currentStats = state.stats;\r\n            let index = 0;\r\n\r\n            currentStats[key].forEach((stat, iteration) => {\r\n                if (stat.id === id) index = iteration;\r\n            });\r\n            currentStats[key].splice(index, 1);\r\n\r\n            const newStats = currentStats;\r\n\r\n            return {\r\n                stats: newStats\r\n            };\r\n        }\r\n        case REMOVE_CHAR_STATS: {\r\n            const id = action.payload.id;\r\n            const currentStats = state.stats;\r\n            const allKeys = Object.keys(currentStats);\r\n            let newStats = currentStats;\r\n\r\n            allKeys.forEach(currentKey => {\r\n                newStats[currentKey] = currentStats[currentKey].filter(stat => {\r\n                    return stat.id !== id;\r\n                });\r\n            });\r\n\r\n            return { stats: [...newStats] };\r\n        }\r\n        default: return state;\r\n    }\r\n};\r\n\r\nexport default stats;","import { combineReducers } from 'redux';\r\nimport characters from './characters';\r\nimport stats from './stats';\r\n\r\nexport default combineReducers({ characters, stats });","import { createStore } from 'redux';\r\nimport rootReducer from './reducers';\r\n\r\nexport default createStore(rootReducer);","import React from 'react';\r\nimport './styles.css';\r\n\r\nconst SearchResult = (props) => {\r\n    const { result } = props;\r\n    const delay = props.delay || 0;\r\n\r\n    return (\r\n        <div onClick={props.onClick}\r\n            className=\"search-result\"\r\n            style={{ animationDelay: delay }}>\r\n            <img src={result.image.url} alt={result.name} style={{ animationDelay: delay + 200 }} />\r\n\r\n            <div className=\"search-result__info\">\r\n                <h4>{result.name}</h4>\r\n                <p>{result.biography['full-name']}</p>\r\n                <i>{result.biography.publisher}</i>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SearchResult;","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { ADD_CHARACTER } from '../../redux/actionTypes';\r\nimport SearchResult from '../searchResult/SearchResult';\r\n\r\n// Declaring controller outside of render to prevent it to be reinitialized\r\nlet controller = new AbortController();\r\nlet signal = controller.signal;\r\n\r\nconst Search = () => {\r\n    const [query, setQuery] = useState('');\r\n    const [currentQuery, setCurrentQuery] = useState('');\r\n    const [searchResults, setSearchResults] = useState([]);\r\n    const dispatch = useDispatch();\r\n\r\n    const updateQuery = (event) => {\r\n        controller.abort();\r\n        const { value } = event.target;\r\n\r\n        setQuery(value);\r\n\r\n        if (query.length >= 3 && query !== currentQuery) callSearch();\r\n        else if (query.length === 0) setSearchResults([]);\r\n    };\r\n\r\n    const callSearch = () => {\r\n        controller = new AbortController();\r\n        signal = controller.signal;\r\n\r\n        const baseUrl = `https://superheroapi.com/api.php/${process.env.REACT_APP_ACCESS_TOKEN}/search/`;\r\n        const urlToFetch = baseUrl + query;\r\n        let options = {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            signal\r\n        };\r\n\r\n        setTimeout(() => {\r\n            fetch(urlToFetch, options).then((response) => {\r\n                response.json().then((json) => setSearchResults(json.results));\r\n            }).catch(error => console.log('Error!', error));\r\n\r\n            setCurrentQuery(query);\r\n        }, 200);\r\n    };\r\n\r\n    const selectResult = (character) => {\r\n        dispatch({ type: ADD_CHARACTER, payload: character });\r\n        setCurrentQuery('');\r\n        setQuery('');\r\n        setSearchResults([]);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input type=\"text\" style={styles.input}\r\n                name=\"q\" autoComplete=\"off\" placeholder=\"Search\"\r\n                value={query}\r\n                onChange={updateQuery} onKeyUp={updateQuery} />\r\n\r\n            <div style={styles.resultsHolder}>\r\n                {searchResults ?\r\n                    searchResults.map((result, index) => {\r\n                        return (\r\n                            <SearchResult onClick={() => selectResult(result)}\r\n                                result={result} delay={100 * index} key={result.id} />\r\n                        )\r\n                    })\r\n                    : ''}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nlet styles = {\r\n    input: {\r\n        width: 'calc(100% - 1em)',\r\n        fontSize: '1.4em',\r\n        padding: '0.2em 0.4em',\r\n        border: '1px solid #ccc',\r\n    },\r\n    resultsHolder: {\r\n        position: 'absolute',\r\n        width: '100%',\r\n        maxHeight: '50vh',\r\n        overflowY: 'auto',\r\n        backgroundColor: '#fff',\r\n        zIndex: 1,\r\n    }\r\n};\r\n\r\nexport default Search;","import React, { useEffect, useState } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nimport { useDispatch } from 'react-redux';\r\nimport { ADD_STAT, REMOVE_STAT } from '../../redux/actionTypes';\r\n\r\nconst CircularStat = (props) => {\r\n    const { title, min, max, color, target, duration, character } = props;\r\n    const id = props.id || title + character.id;\r\n    const delay = props.delay || 0;\r\n    const rest = max - target;\r\n    const backgroundColor = '#ccc';\r\n\r\n    const data = [target, rest];\r\n    const canvasWidth = 200;\r\n    const canvasHeight = 200;\r\n    const canvasMargin = 10;\r\n    const pieWidth = 20;\r\n    const radius = Math.min(canvasWidth, canvasHeight) / 2 - canvasMargin;\r\n    const innerRadius = radius - pieWidth;\r\n\r\n    const [active, setActive] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const drawStat = () => {\r\n        const canvas = d3.select(`#stats-${id}`);\r\n\r\n        // Creating svg canvas\r\n        const svgCanvas = canvas.select('svg').html('')\r\n            .attr('preserveAspectRatio', 'xMinYMin meet')\r\n            .attr('viewBox', `0 0 ${canvasWidth} ${canvasHeight}`);\r\n        const gBackground = svgCanvas.append('g').attr('transform', `translate(${canvasWidth / 2}, ${canvasHeight / 2})`);\r\n        const gData = svgCanvas.append('g').attr('transform', `translate(${canvasWidth / 2}, ${canvasHeight / 2})`);\r\n\r\n        // Getting data ready\r\n        const pie = d3.pie().value((datapoint) => datapoint.value);\r\n        const entries = pie(d3.entries(data));\r\n        const dataReady = entries.filter((item, index) => index === 0);\r\n        const arc = d3.arc().innerRadius(innerRadius).outerRadius(radius).cornerRadius(radius);\r\n\r\n        // Drawing background\r\n        const backgroundData = pie(d3.entries([100]));\r\n        gBackground\r\n            .append('path').attr('d', arc(backgroundData[0]))\r\n            .attr('fill', backgroundColor)\r\n\r\n        // Drawing chart\r\n        gData.selectAll('path').data(dataReady).enter()\r\n            .append('path')\r\n            .attr('d', '')\r\n            .attr('fill', color)\r\n            //Animation\r\n            .transition()\r\n            .duration(duration)\r\n            .attrTween('d', (datapoint) => {\r\n                const newData = { ...datapoint };\r\n                const interpolateEndAngle = d3.interpolate(newData.startAngle, newData.endAngle);\r\n\r\n                return (progress) => {\r\n                    newData.endAngle = interpolateEndAngle(progress);\r\n                    return arc(newData);\r\n                };\r\n            })\r\n            .delay(delay);\r\n\r\n        // Draw centerd number\r\n        gData.append('text')\r\n            .text(target).style('font-size', '2em')\r\n            .attr('x', (datapoint, iteration, groups) => {\r\n                const element = groups[iteration];\r\n                const width = element.getBBox().width;\r\n\r\n                return 0 - width / 2;\r\n            }).text(min)\r\n            .attr('y', (datapoint, iteration, groups) => {\r\n                const element = groups[iteration];\r\n                const height = element.getBBox().height;\r\n\r\n                return 0 + height / 2;\r\n            })\r\n            .transition()\r\n            .duration(duration)\r\n            .tween('text', (datapoint, iteration, groups) => {\r\n                const element = groups[iteration];\r\n                const interpolateText = d3.interpolateNumber(min, target);\r\n\r\n                return (progress) => {\r\n                    const newText = parseInt(interpolateText(progress));\r\n                    return d3.select(element).text(newText);\r\n                };\r\n            })\r\n            .delay(delay);\r\n    };\r\n\r\n    const hightlightNumber = () => {\r\n        const canvas = d3.select(`#stats-${id}`);\r\n\r\n        // Creating svg canvas\r\n        const svgCanvas = canvas.select('svg');\r\n        svgCanvas.select('text').style('font-weight', 'bold');\r\n    };\r\n\r\n    const addStat = () => {\r\n        const payload = {\r\n            name: title,\r\n            data: {\r\n                character: character.name,\r\n                \"full-name\": character.biography['full-name'],\r\n                value: target,\r\n                color,\r\n                id: character.id\r\n            }\r\n        };\r\n\r\n        dispatch({ type: ADD_STAT, payload });\r\n        setActive(true);\r\n    };\r\n\r\n    const removeStat = () => {\r\n        const canvas = d3.select(`#stats-${id}`);\r\n        const svgCanvas = canvas.select('svg');\r\n        svgCanvas.select('text').style('font-weight', 'normal');\r\n\r\n        dispatch({\r\n            type: REMOVE_STAT,\r\n            payload: {\r\n                key: title,\r\n                id: character.id\r\n            }\r\n        });\r\n        setActive(false);\r\n    };\r\n\r\n    const handleClick = () => {\r\n        if (!active) addStat();\r\n        else removeStat();\r\n    };\r\n\r\n    useEffect(() => {\r\n        drawStat();\r\n    }, []);\r\n\r\n    if (active) hightlightNumber();\r\n\r\n    return (\r\n        <div id={`stats-${id}`} style={{ cursor: 'pointer' }}\r\n            className=\"circular-stat\" onClick={handleClick} >\r\n            <h4 style={{ textAlign: 'center', textTransform: 'capitalize' }}>{title}</h4>\r\n            <svg></svg>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CircularStat;","import React, { useState, useEffect } from 'react';\r\nimport posed from 'react-pose';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nimport { REMOVE_CHARACTER, REMOVE_CHAR_STATS } from '../../redux/actionTypes';\r\n\r\nimport './styles.css';\r\nimport CircularStat from '../circularstat/CircularStat';\r\n\r\nconst AccordionContent = posed.div({\r\n    closed: { height: 0 },\r\n    open: { height: 'auto' }\r\n});\r\n\r\nconst Character = (props) => {\r\n    const { character, units } = props;\r\n    const [open, setOpen] = useState('stats');\r\n    const dispatch = useDispatch();\r\n    const circularStats = Object.keys(character.powerstats).map((key) => [key, character.powerstats[key]]);\r\n\r\n    const openAccordion = (id) => {\r\n        if (open !== id) setOpen(id);\r\n        else setOpen('');\r\n    };\r\n\r\n    const removeCharacter = (char) => {\r\n        dispatch({ type: REMOVE_CHARACTER, payload: char });\r\n        dispatch({ type: REMOVE_CHAR_STATS, payload: { id: character.id }})\r\n    };\r\n\r\n    const getRandomColor = () => {\r\n        const letters = '0123456789ABCDEF';\r\n        let color = '#';\r\n        for (let i = 0; i < 6; i++) {\r\n            color += letters[Math.floor(Math.random() * 16)];\r\n        }\r\n        return color;\r\n    };\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log('will unmonunt');\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"card\">\r\n            <div className=\"card-header\">\r\n                <span className=\"remove-card\"\r\n                    onClick={() => removeCharacter(character)}>&times;</span>\r\n                <img src={character.image.url} alt={character.name} />\r\n\r\n                <h1 className=\"card-name\">{character.name}</h1>\r\n                <h2 className=\"margin-0\">{character.biography['full-name']}</h2>\r\n\r\n                <i>{character.biography.publisher}</i>\r\n            </div>\r\n\r\n            <div className={`accordion ${open === 'biography' ? 'open' : ''}`}>\r\n                <h2 onClick={() => openAccordion('biography')}>Biography</h2>\r\n\r\n                <AccordionContent pose={open === 'biography' ? 'open' : 'closed'} className=\"accordion__content\">\r\n                    <div className=\"single-line\">\r\n                        <h4>Place of birth</h4>\r\n                        <p>{character.biography['place-of-birth']}</p>\r\n                    </div>\r\n\r\n                    <div className=\"single-line\">\r\n                        <h4>Race</h4>\r\n                        <p>{character.appearance.race}</p>\r\n                    </div>\r\n\r\n                    <div className=\"single-line\">\r\n                        <h4>Gender</h4>\r\n                        <p>{character.appearance.gender}</p>\r\n                    </div>\r\n\r\n                    <div className=\"single-line\">\r\n                        <h4>Height</h4>\r\n                        <p>\r\n                            {units === \"imperial\" ? character.appearance.height[0] : character.appearance.height[1]}\r\n                        </p>\r\n                    </div>\r\n\r\n                    <div className=\"single-line\">\r\n                        <h4>Weight</h4>\r\n                        <p>\r\n                            {units === \"imperial\" ? character.appearance.weight[0] : character.appearance.weight[1]}\r\n                        </p>\r\n                    </div>\r\n\r\n                    <h4>Family</h4>\r\n                    <p>{character.connections.relatives}</p>\r\n\r\n                    <div className=\"single-line\">\r\n                        <h4>Work</h4>\r\n                        <p>{character.work.occupation}</p>\r\n                    </div>\r\n\r\n                    <div className=\"single-line\">\r\n                        <h4>First appearance</h4>\r\n                        <p>{character.biography['first-appearance']}</p>\r\n                    </div>\r\n\r\n                    <h4>Aliases</h4>\r\n                    <ul className=\"aliases\">\r\n                        {character.biography.aliases.map((alias, key) => (\r\n                            <li key={key}>{alias}</li>\r\n                        ))}\r\n                    </ul>\r\n\r\n                    <h4>Alter egos</h4>\r\n                    <p>{character.biography['alter-egos']}</p>\r\n                </AccordionContent>\r\n            </div>\r\n\r\n            <div className={`accordion ${open === 'stats' ? 'open' : ''}`}>\r\n                <h2 onClick={() => openAccordion('stats')}>Stats</h2>\r\n\r\n                <AccordionContent pose={open === 'stats' ? 'open' : 'closed'} className=\"accordion__content\">\r\n                    {circularStats.map((stat, index) => {\r\n                        const color = getRandomColor();\r\n                        return (\r\n                            <CircularStat key={index}\r\n                                title={stat[0]} min={0} max={100}\r\n                                color={color} target={stat[1]}\r\n                                duration={1000} delay={index * 100} character={character} />\r\n                        )\r\n                    })}\r\n                </AccordionContent>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Character;","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\n\r\nimport Character from '../character/Character';\r\n\r\nconst CharactersContainer = () => {\r\n    const characters = useSelector(state => state.characters.characters);\r\n\r\n    return (\r\n        <div style={{ width: \"100%\" }}>\r\n            <div style={{ width: \"100%\", overflowX: \"auto\" }}>\r\n                {characters ? characters.map((character, index) => {\r\n                    return(<Character key={character.id} character={character} />)\r\n                }) : ''}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CharactersContainer;","import React, { useEffect } from 'react';\r\nimport * as d3 from 'd3';\r\nimport { format } from 'util';\r\n\r\nconst Chart = (props) => {\r\n    const { name, data, duration, id } = props;\r\n\r\n    const drawBarChart = () => {\r\n        let allValues = [];\r\n        data.forEach((item, index) => {\r\n            allValues.push(parseFloat(item.value));\r\n        });\r\n\r\n        // Defining values\r\n        const barsWidth = 10;\r\n        const barsMargin = 5;\r\n        const barsScale = 0.5;\r\n        const canvasWidth = allValues.length * (barsWidth + barsMargin) + barsMargin;\r\n        const canvasHeight = parseInt(d3.max(allValues) * barsScale) * 1.3;\r\n        const canvas = d3.select(`#stats-${id}`);\r\n        canvas.html('');\r\n\r\n        // Title of the chart\r\n        canvas.append('h4').text(() => name)\r\n            .style('text-transform', 'capitalize').style('font-size', '1.4em')\r\n            .style('text-align', 'center');\r\n\r\n        // Creating canvas\r\n        const svgCanvas = canvas.append('svg')\r\n            .attr('preserveAspectRatio', 'xMaxYMin meet')\r\n            .attr('viewBox', `0 0 ${canvasWidth} ${canvasHeight}`)\r\n            .style('overflow', 'visible').attr('stroke', 1);\r\n\r\n        // Group for the bars\r\n        svgCanvas.append('g').attr('class', 'inside-rect')\r\n            .style('transform', 'translate(0, -5%)');\r\n\r\n        // Labels for the bars\r\n        svgCanvas.append('g').attr('class', 'labels-group').style('transform', 'translate(0, 100%)')\r\n            .selectAll('text').data(data).enter()\r\n            .append('text').text(datapoint => datapoint.character)\r\n            .style('font-size', '10%')\r\n            .style('font-weight', (datapoint, iteration) => {\r\n                if (datapoint.value === d3.max(allValues)) return 'bold';\r\n            })\r\n            .attr('x', (datapoint, iteration, groups) => {\r\n                const { width } = groups[iteration].getBBox();\r\n                const x = barsMargin + iteration * (barsWidth + barsMargin);\r\n                const newPosition = x + (barsWidth - width) / 2;\r\n\r\n                return newPosition;\r\n            });\r\n\r\n        // Creating bars\r\n        svgCanvas.select('.inside-rect')\r\n            .selectAll('rect').data(allValues).enter().append('rect')\r\n            .attr('width', barsWidth).attr('height', 0)\r\n            .attr('fill', (datapoint, iteration) => data[iteration].color)\r\n            .attr('x', (datapoint, iteration) => iteration * (barsWidth + barsMargin) + barsMargin)\r\n            .attr('y', canvasHeight)\r\n            // Animation\r\n            .transition()\r\n            .duration(duration)\r\n            .attr('height', (datapoint) => datapoint * barsScale)\r\n            .attr('y', (datapoint) => canvasHeight - (datapoint * barsScale))\r\n            .delay((datapoint, iteration) => iteration * 200);\r\n\r\n        // Showing values above each bar\r\n        svgCanvas.select('.inside-rect').selectAll('text').data(allValues).enter().append('text')\r\n            .style('font-size', '25%')\r\n            .style('font-weight', (datapoint, iteration) => {\r\n                if (datapoint === d3.max(allValues)) return 'bold';\r\n            })\r\n            .text(datapoint => datapoint)\r\n            .attr('x', (datapoint, iteration, groups) => {\r\n                const { width } = groups[iteration].getBBox();\r\n                const x = barsMargin + iteration * (barsWidth + barsMargin);\r\n                const newPosition = x + (barsWidth - width) / 2;\r\n\r\n                return newPosition;\r\n            }).attr('y', canvasHeight - 1)\r\n            .text(0)\r\n            // Animation\r\n            .transition()\r\n            .duration(duration)\r\n            .tween('text', (datapoint, iteration, groups) => {\r\n                const element = groups[iteration];\r\n                const newNumber = d3.interpolateNumber(element.textContent, datapoint);\r\n\r\n                 return (progress) => {\r\n                     const newText = parseInt(format(newNumber(progress)));\r\n                     return d3.select(element).text(newText);\r\n                }\r\n            })\r\n            .attr('y', datapoint => canvasHeight - (datapoint * barsScale) - 1)\r\n            .delay((datapoint, iteration) => iteration * 200);\r\n    };\r\n\r\n    useEffect(() => {\r\n        drawBarChart();\r\n    }, []);\r\n\r\n    // Redraw on every render in case there's new data\r\n    drawBarChart();\r\n\r\n    return (\r\n        <div id={`stats-${id}`} style={{ width: \"300px\", marginBottom: \"1em\", marginTop: \"1em\" }} ></div>\r\n    );\r\n};\r\n\r\nexport default Chart;","import React, { useState } from 'react';\r\nimport { useSelector, useStore } from 'react-redux';\r\n\r\nimport Chart from '../chart/Chart';\r\n\r\nconst StatsContainer = () => {\r\n    const store = useStore();\r\n    const state = useSelector(state => state);\r\n    const [statsState, setStatsState] = useState([]);\r\n\r\n    store.subscribe(() => {\r\n        const stats = state.stats.stats;\r\n        const statsArray = Object.keys(stats).map((key) => [key, stats[key]]);\r\n\r\n        setStatsState([...statsArray]);\r\n    });\r\n\r\n    return (\r\n        <div style={{ display: 'flex', alignItems: 'flex-end' }}>\r\n            {statsState.length > 0 ?\r\n                statsState.map((stat, index) => {\r\n                    return stat[1].length > 0 ? (\r\n                        <Chart key={index} id={index}\r\n                            duration={1000} name={stat[0]} data={stat[1]} />\r\n                    ) : null;\r\n                }) : ''\r\n            }\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default StatsContainer;","import React from 'react';\nimport Search from './components/search/Search';\nimport CharactersContainer from './components/charactersContainer/CharactersContainer';\nimport StatsContainer from './components/statsContainer/StatsContainer';\n\nfunction App() {\n  console.log();\n  return (\n    <div>\n      <h1>Know Your Hero</h1>\n      <Search />\n      <CharactersContainer />\n      <StatsContainer />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>, document.getElementById('root'));"],"sourceRoot":""}